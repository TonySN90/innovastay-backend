(function (React, designSystem) {
  'use strict';

  function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

  var React__default = /*#__PURE__*/_interopDefault(React);

  const Dashboard = props => {
    console.log("All Dashboard props:", props);
    console.log("Props keys:", Object.keys(props));

    // AdminJS kann Daten in verschiedenen Formen übergeben
    let serverData = null;

    // Versuche verschiedene Möglichkeiten, die Daten zu finden
    if (props.data) {
      serverData = props.data;
      console.log("Found data in props.data:", serverData);
    } else if (props.record) {
      serverData = props.record;
      console.log("Found data in props.record:", serverData);
    } else if (props.resource) {
      serverData = props.resource;
      console.log("Found data in props.resource:", serverData);
    } else if (props.currentAdmin) {
      console.log("Found currentAdmin:", props.currentAdmin);
    }

    // Prüfe alle Props auf Dashboard-ähnliche Daten
    Object.keys(props).forEach(key => {
      const value = props[key];
      if (value && typeof value === "object" && (value.totalLandlords !== undefined || value.totalLodgings !== undefined || value.data !== undefined)) {
        console.log(`Found potential dashboard data in ${key}:`, value);
        serverData = value.data || value;
      }
    });
    console.log("Final serverData:", serverData);

    // Nutze Server-Daten oder lade sie dynamisch
    const [dashboardData, setDashboardData] = React__default.default.useState(serverData);

    // Lade Daten dynamisch falls nicht über Props verfügbar
    React__default.default.useEffect(() => {
      if (!serverData) {
        console.log("No server data found, trying to fetch from /admin/api/dashboard");
        // Versuche, die Daten direkt zu fetchen
        fetch("/admin/api/dashboard", {
          method: "GET",
          headers: {
            "Content-Type": "application/json"
          },
          credentials: "include"
        }).then(response => response.json()).then(result => {
          console.log("Fetched dashboard data:", result);
          if (result.data) {
            setDashboardData(result.data);
          }
        }).catch(error => {
          console.error("Error fetching dashboard data:", error);
        });
      }
    }, [serverData]);
    if (!dashboardData) {
      return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
        p: "xl"
      }, /*#__PURE__*/React__default.default.createElement(designSystem.H1, null, "\uD83C\uDFE0 Innovastay Dashboard"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, null, "Lade Dashboard-Daten..."), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
        fontSize: "sm",
        color: "grey60"
      }, "Schauen Sie in die Browser-Konsole f\xFCr Debug-Informationen"));
    }
    const {
      totalLandlords = 0,
      totalLodgings = 0,
      totalAdmins = 0,
      recentLandlords = 0,
      recentLodgings = 0,
      averagePrice = 0,
      topLocations = [],
      topAmenities = []
    } = dashboardData;
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      p: "xl"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      mb: "xl"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.H1, null, "\uD83C\uDFE0 Innovastay Dashboard"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, null, "Hier finden Sie alle wichtigen Statistiken und Analysen Ihrer Plattform")), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      mb: "xl"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.H2, {
      mb: "lg"
    }, "Hauptstatistiken"), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      style: {
        display: "grid",
        gridTemplateColumns: "repeat(auto-fit, minmax(250px, 1fr))",
        gap: "16px"
      }
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      p: "lg",
      bg: "white",
      style: {
        border: "1px solid #e0e0e0",
        borderRadius: "8px",
        textAlign: "center",
        position: "relative"
      }
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      style: {
        position: "absolute",
        top: "16px",
        right: "16px",
        opacity: 0.3,
        fontSize: "24px"
      }
    }, "\uD83D\uDC65"), /*#__PURE__*/React__default.default.createElement(designSystem.H3, {
      color: "primary"
    }, totalLandlords.toLocaleString()), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontWeight: "bold"
    }, "Gesamte Vermieter"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "sm"
    }, recentLandlords, " neue in 30 Tagen")), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      p: "lg",
      bg: "white",
      style: {
        border: "1px solid #e0e0e0",
        borderRadius: "8px",
        textAlign: "center",
        position: "relative"
      }
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      style: {
        position: "absolute",
        top: "16px",
        right: "16px",
        opacity: 0.3,
        fontSize: "24px"
      }
    }, "\uD83C\uDFE2"), /*#__PURE__*/React__default.default.createElement(designSystem.H3, {
      color: "success"
    }, totalLodgings.toLocaleString()), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontWeight: "bold"
    }, "Gesamte Unterk\xFCnfte"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "sm"
    }, recentLodgings, " neue in 30 Tagen")), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      p: "lg",
      bg: "white",
      style: {
        border: "1px solid #e0e0e0",
        borderRadius: "8px",
        textAlign: "center",
        position: "relative"
      }
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      style: {
        position: "absolute",
        top: "16px",
        right: "16px",
        opacity: 0.3,
        fontSize: "24px"
      }
    }, "\uD83D\uDCB0"), /*#__PURE__*/React__default.default.createElement(designSystem.H3, {
      color: "warning"
    }, "\u20AC", averagePrice.toLocaleString()), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontWeight: "bold"
    }, "Durchschnittspreis"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "sm"
    }, "pro Nacht")), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      p: "lg",
      bg: "white",
      style: {
        border: "1px solid #e0e0e0",
        borderRadius: "8px",
        textAlign: "center",
        position: "relative"
      }
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      style: {
        position: "absolute",
        top: "16px",
        right: "16px",
        opacity: 0.3,
        fontSize: "24px"
      }
    }, "\uD83D\uDEE1\uFE0F"), /*#__PURE__*/React__default.default.createElement(designSystem.H3, {
      color: "danger"
    }, totalAdmins), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontWeight: "bold"
    }, "Administratoren"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "sm"
    }, "aktive Benutzer")))), topLocations.length > 0 && /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      mb: "xl"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.H2, {
      mb: "lg"
    }, "\uD83D\uDCCD Top Standorte"), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      p: "lg",
      bg: "white",
      style: {
        border: "1px solid #e0e0e0",
        borderRadius: "8px"
      }
    }, topLocations.map((location, index) => {
      const percentage = totalLodgings > 0 ? Math.round(location.count / totalLodgings * 100) : 0;
      return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
        key: index,
        p: "sm",
        style: {
          display: "flex",
          justifyContent: "space-between",
          alignItems: "center",
          borderBottom: index < topLocations.length - 1 ? "1px solid #f0f0f0" : "none"
        }
      }, /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
        fontWeight: "bold"
      }, location.location), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
        style: {
          display: "flex",
          gap: "16px"
        }
      }, /*#__PURE__*/React__default.default.createElement(designSystem.Text, null, location.count, " Unterk\xFCnfte"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
        color: "primary"
      }, percentage, "%")));
    }))), topAmenities.length > 0 && /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      mb: "xl"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.H2, {
      mb: "lg"
    }, "\u2B50 Beliebteste Ausstattungen"), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      p: "lg",
      bg: "white",
      style: {
        border: "1px solid #e0e0e0",
        borderRadius: "8px"
      }
    }, topAmenities.map((amenity, index) => {
      const percentage = totalLodgings > 0 ? Math.round(amenity.count / totalLodgings * 100) : 0;
      return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
        key: index,
        p: "sm",
        style: {
          display: "flex",
          justifyContent: "space-between",
          alignItems: "center",
          borderBottom: index < topAmenities.length - 1 ? "1px solid #f0f0f0" : "none"
        }
      }, /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
        fontWeight: "bold"
      }, amenity.amenity), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
        style: {
          display: "flex",
          gap: "16px"
        }
      }, /*#__PURE__*/React__default.default.createElement(designSystem.Text, null, amenity.count, "x vorhanden"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
        color: "success"
      }, percentage, "%")));
    }))), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      textAlign: "center",
      color: "grey60",
      fontSize: "sm"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Text, null, "Dashboard zuletzt aktualisiert: ", new Date().toLocaleString("de-DE"))));
  };

  AdminJS.UserComponents = {};
  AdminJS.UserComponents.Dashboard = Dashboard;

})(React, AdminJSDesignSystem);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
